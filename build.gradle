/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'cpp'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/ijabz/maven'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'

    compile group:'net.jthink', name:'jaudiotagger', version:'2.2.5'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
}

model {
    repositories {
        libs(PrebuiltLibraries) {
            mtp {
                headers.srcDir "/usr/include"
            }

            def libDir = "/usr/lib/x86_64-linux-gnu/"

            mtplib {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file(libDir + 'libmtp.so')
                }
            }
        }
    }
    binaries {
        all {
            if (toolChain in Gcc && buildType == buildTypes.debug) {
                cppCompiler.args "-g"
            }
            if (toolChain in VisualCpp && buildType == buildTypes.debug) {
                cppCompiler.args '/Zi'
                cppCompiler.define 'DEBUG'
                linker.args '/DEBUG'
            }
        }
    }
    components {
        jmtp(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDir 'src/main/cpp/src'
                        include '*.cpp'
                    }
                    exportedHeaders {
                        srcDirs 'src/main/cpp/include', '/usr/include', '/usr/local/include', '/usr/lib/jvm/default-java/include', '/usr/lib/jvm/default-java/include/linux'
                    }

                    lib library: 'mtp', linkage: 'api'
                    lib library: 'mtplib'
                }

            }
            buildTypes {
                debug
                release
            }
        }
        jmtpx(NativeExecutableSpec) {
            sources {
                cpp {
                    source {
                        srcDir 'src/main/cpp/src'
                        include '*.cpp'
                    }
                    exportedHeaders {
                        srcDirs 'src/main/cpp/include', '/usr/include', '/usr/local/include', '/usr/lib/jvm/default-java/include', '/usr/lib/jvm/default-java/include/linux'
                    }

                    lib library: 'mtp', linkage: 'api'
                    lib library: 'mtplib'
                }
            }
            buildTypes {
                debug
                release
            }
        }
    }
}

compileJava {
    options.compilerArgs += ['-h', file('src/main/cpp/include/')]
}

test {
    systemProperty 'java.library.path', '.:/usr/lib/x86_64-linux-gnu/:build/libs/jmtp/shared/debug/'
    dependsOn 'jmtpDebugSharedLibrary'
}

defaultTasks 'clean', 'build', 'jacocoTestReport'
